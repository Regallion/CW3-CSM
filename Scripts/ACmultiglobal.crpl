#This script is optional, along with ACmultitower.crpl. If included, the output of all AC emitters on the map will be increased depending on how many AC multi towers are "active" (submerged in AC). If you omit this script, emitters should simply retain the values you've given them. I personally didn't use this script on any of my CWDig maps other than the introduction but there could be more potential.

$DefaultPower:1
$Name:"acmultiglobal"


once #setup: creates lists and sets a default.
<-DefaultPower ->TotalPower 
CreateList ->Powers
CreateList ->NegaPowers
@awake
endonce
<-Changed if #If this recieved a signal that an AC tower changed, it will execute this block
	#First reset the Power total to our default
	<-DefaultPower ->TotalPower
	#Go over our power list and add up TotalPower
	<-Powers GetListCount 0 do
		<-TotalPower <-Powers I GetListElement add ->TotalPower
	loop
	
	<-TotalPower 1 max ->TotalPower #Make sure it is never a reduction
	"HasEmitterInterface" 1 GetCoresWithVar #alters every emitter which utilizes a TotalPower variable: that's all emitters that can emit AC.
	0 do
		->Target
		<-Target "EmitterInterface.crpl" "EmitterType" GetScriptVar ->EmitterType
		<-Target <-EmitterType ".crpl" concat "TotalPower" <-TotalPower SetScriptVar
		<-Target <-EmitterType ".crpl" concat "multi" 1 SetScriptVar
	loop
	
	0 ->Changed
	endif
<-CChanged if #Same as changed but for C towers.
	#First reset the Power total to our default
	0 ->TotalNegaPower
	#Go over our power list and add up TotalPower
	<-NegaPowers GetListCount 0 do
		<-TotalNegaPower <-NegaPowers I GetListElement add ->TotalNegaPower
	loop
	"HasEmitterInterface" 1 GetCoresWithVar #Affects all emitters using NegaPower. That's all emitterts that can emit C.
	0 do
		->Target
		<-Target "EmitterInterface.crpl" "EmitterType" GetScriptVar ->EmitterType
		<-Target <-EmitterType ".crpl" concat "NegaPower" <-TotalNegaPower SetScriptVar
	loop
	0 ->CChanged
endif
:Awake
self "main" "none" SetImage
