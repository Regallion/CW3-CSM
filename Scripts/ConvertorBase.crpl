
$MovementSpeed:0.25
$ConversionRadius:4 # in cells
$SecondRadius:4 # in cells
$SecondConversionSeconds:5.0 # convert back to creeper after X seconds. Set to 0 to disable this
$CooldownSeconds:60

$ImageNormal:"Custom12_128"
$ImageActive:"Custom13_128"
$ImageCharged:"Custom14_128"

once
    0 ->STATE_INACTIVE
    1 ->STATE_CHARCHING
    2 ->STATE_READY
    3 ->STATE_TRAVEL
    4 ->STATE_SECOND
    5 ->STATE_RESET

    <-STATE_INACTIVE ->state
    -1 ->bombId
	@Awake
    
    <-CooldownSeconds 30 mul ->cooldown
endonce

<-state <-STATE_RESET eq if
    <-STATE_CHARCHING ->state
    <-cooldown SetTimer0
endif

@SetImageAndText

<-state <-STATE_INACTIVE eq if
    CurrentCoords GetCreeper -4 lte if
		"Thanks for rescuing me from the evil creeps!" SetText
        50 220 50 255 SetTextColor 20 SetTextY 1.1 SetTextSize
        150 SetTimer1
        <-cooldown SetTimer0
        <-STATE_CHARCHING ->state
        @SetImageAndText
    else
        return
    endif
endif

GetTimer1 eq0 if
    "" SetText
endif

<-state <-STATE_CHARCHING eq if
    GetTimer0 neq0 if
        return
    else
        <-STATE_READY ->state
        "AC bomb is ready to use" SetPopupText
        @CreateBomb ->bombId
        @SetImageAndText
    endif
endif

:CreateBomb # - uid
    "CRPLCORE" CurrentCoords CreateUnit ->uid
    <-uid "ConvertorBomb.crpl" AddScriptToUnit
    <-uid "ConvertorBomb.crpl" "CreatedBy" Self SetScriptVar
    <-uid "ConvertorBomb.crpl" "MovementSpeed" <-MovementSpeed SetScriptVar
    <-uid "ConvertorBomb.crpl" "ConversionRadius" <-ConversionRadius SetScriptVar
    <-uid "ConvertorBomb.crpl" "SecondRadius" <-SecondRadius SetScriptVar
    <-uid "ConvertorBomb.crpl" "SecondConversion" <-SecondConversionSeconds 30 mul asint SetScriptVar
    <-uid return

:SetImageAndText
    <-state <-STATE_INACTIVE eq if
        Self "main" <-ImageNormal SetImage
        "Flood me with anti-creeper to save me!" SetPopupText
    endif
    <-state <-STATE_CHARCHING eq if
        Self "main" <-ImageActive SetImage
        "A new AC bomb will ne ready in " GetTimer0 30.0 div 0 Round " seconds" concat concat SetPopupText
    endif
    <-state <-STATE_READY eq if
        Self "main" <-ImageCharged SetImage
        "AC bomb is ready to use" SetPopupText
    endif
    <-state <-STATE_TRAVEL eq if
        Self "main" <-ImageCharged SetImage
        "The AC bomb is on it's way" SetPopupText
    endif
    <-state <-STATE_SECOND eq if
        Self "main" <-ImageCharged SetImage
        "AC bomb will reverse-explode soon, watch out!" SetPopupText
    endif

:Awake
    Self CONST_COUNTSFORVICTORY 0 SetUnitAttribute 
    Self CONST_NULLIFIERDAMAGES 0 SetUnitAttribute 
    Self CONST_SUPPORTSDIGITALIS 0 SetUnitAttribute 
    Self CONST_CREATEPZ 0 SetUnitAttribute
    Self CONST_TAKEMAPSPACE 1 SetUnitAttribute

    @SetImageAndText
    Self "main" Self CONST_CELLWIDTH GetUnitAttribute 3.0 div Self CONST_CELLHEIGHT GetUnitAttribute 3.0 div SetImageScale
    