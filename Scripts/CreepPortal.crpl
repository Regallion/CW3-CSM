#Stargate script
$colorID:0 #States color, 5 for black.
$Name:"CreepPortal" #For identification
$Size:2 #Size in cells. Always square.
$StartDelay:0 
$Conduction:0 #Defines whether it conducts both AC and C, or just AC. 1 for just C conduction, 0 for both, -1 for AC conduction.
$Thresh:1

$ImageLine:"Custom3pp"

once
	HideTraceLog
	ClearTraceLog
	<-colorID ->trueColor
	<-colorID ->lastColor
	@awake
	<-Conduction 0 eq if
		Self "dot" 0 0 0 255 SetImageColor
	else
		<-Conduction 1 eq if
			Self "dot" 50 50 255 255 SetImageColor
		else
			Self "dot" 255 255 255 255 SetImageColor
		endif
	endif
	<-Size 1 eq if
		Self "main" 0.3 0.3 SetImageScale
		Self "dot" 0.3 0.3 SetImageScale
		Self "shape" 0.5 0.5 SetImageScale
		Self "dots" 0.3 0.3 SetImageScale
		#Self "letter" 0.3 0.3 SetImageScale
	else
		<-Size 2 eq if
			Self "main" 0.6 0.6 SetImageScale
			Self "dot" 0.6 0.6 SetImageScale
			Self "shape" 0.8 0.8 SetImageScale
            Self "dots" 0.6 0.6 SetImageScale
			#Self "letter" 0.6 0.6 SetImageScale
			5 ->Size
		else
			<-Size 3 eq if
				Self "main" 1.1 1.1 SetImageScale
				Self "dot" 1.1 1.1 SetImageScale
				Self "shape" 1.3 1.3 SetImageScale
                Self "dots" 1.1 1.1 SetImageScale
				#Self "letter" 1.1 1.1 SetImageScale
				9 ->Size
			else
				<-Size 4 eq if
					Self "main" 1.75 1.75 SetImageScale
					Self "dot" 1.75 1.75 SetImageScale
					Self "shape" 2 2 SetImageScale
                    Self "dots" 1.75 1.75 SetImageScale
					#Self "letter" 1.75 1.75 SetImageScale
					25 ->Size
				endif
			endif
		endif
	endif
	0 ->active
	1 ->conductable
	<-Conduction <-Thresh mul ->Thresh
	0 ->parentCore
    Self "DockerInterface.crpl" "Occupied" "0" SetScriptVar
    
    <-isDark if
        0 ->darkRotation
    endif
endonce

IsPaused not if
    <-active if #only conducts if submerged in correct kind of C/AC. 
        <-Conduction neq0 if
            <-conductable if
                <-Conduction 1 eq if
                    CurrentCoords GetCreeper <-Thresh lt if 
                        0 ->conductable
                    endif
                else
                    <-Conduction -1 eq if
                        CurrentCoords GetCreeper <-Thresh gt if 
                            0 ->conductable
                        endif
                    endif
                endif
            else
                <-Conduction 1 eq if
                    CurrentCoords GetCreeper <-Thresh gte if 
                        1 ->conductable
                    endif
                else
                    <-Conduction -1 eq if
                        CurrentCoords GetCreeper <-Thresh lte if 
                            1 ->conductable
                        endif
                    endif
                endif
            endif
        endif
    else
        GetGameTimeFrames <-StartDelay gte if
            1 ->active
        endif
    endif
    <-Timer3 0 lte if
        <-parentCore if
            <-parentCore "PortalGlobal.crpl" "cbActive" GetScriptVar if
                Self "shape" 255 255 255 255 SetImageColor
                # Self "letter" 255 255 255 255 SetImageColor
            else
                Self "shape" 255 50 50 0 SetImageColor
                # Self "letter" 0 0 0 0 SetImageColor
            endif
        else
            "Name" "PortalGlobal" GetCoresWithVar if ->parentCore endif
        endif
        30 ->Timer3
    endif

    <-isDark <-Timer0 0 lte and if #if it's color 5 does a thing.
        Self "dots" <-darkRotation -0.78539816339 mul SetImageRotation
        <-darkRotation 1 add ->darkRotation
        30 ->Timer0
    endif

    <-Timer0 1 sub ->Timer0
    <-Timer3 1 sub ->Timer3
endif # IsPaused
    
# cleartracelog
# showtracelog
# "C: " <-conductable concat trace
# "A: " <-active concat trace


#### LINE RENDERING ####

once
    return # dirty trick to wait 1 frame for other gates to init their "trueColor" variable
endonce

once
    @InitColor
    @InitLineImages
endonce
<-colorID <-lastColor neq if
	"lastColor" <-lastColor GetCoresWithVar 0 do
		->lastGate
		<-lastGate "CreepPortal.crpl" "Rerender" 1 SetScriptVar
	loop
	"colorID" <-colorID GetCoresWithVar 0 do
		->lastGate
		<-lastGate "CreepPortal.crpl" "Rerender" 1 SetScriptVar
	loop
	<-colorID ->lastColor
endif
<-Rerender if
    @InitColor
    @InitLineImages
	0 ->Rerender
endif
GetMouseCell CurrentCoords Distance 1.5 lte if #hardwired 3x3 size, but meh, it's for visual effect only
    <-LINE_ALPHA 17 add 255 min ->LINE_ALPHA
else
    <-LINE_ALPHA 17 sub 0 max ->LINE_ALPHA
endif

@RenderLineImages

:InitColor # -
    <-colorID 0 eq if #red
        255 ->R
        0 ->G
        0 ->B
        return
    endif
    <-colorID 1 eq if #green
        0 ->R
        255 ->G
        0 ->B
        return
    endif
    <-colorID 2 eq if #pink
        255 ->R
        64 ->G
        128 ->B
        return
    endif
    <-colorID 3 eq if #yellow
        255 ->R
        255 ->G
        0 ->B
        return
    endif
    <-colorID 4 eq if #blue
        0 ->R
        0 ->G
        255 ->B
        return
    endif
    <-colorID 5 eq if #black
        128 ->R
        128 ->G
        128 ->B
        return
    endif
    <-colorID 6 eq if #brown
        192 ->R
        98 ->G
        0 ->B
        return
    endif
    <-colorID 7 eq if #white
        255 ->R
        255 ->G
        255 ->B
        return
    endif
    <-colorID 8 gte if #WOWZERS
        30 <-colorID mul 255 mod ->R
        50 <-colorID mul 255 mod ->G
        80 <-colorID mul 255 mod ->B
        return
    endif
    # unknow color - use teal
    0 ->R
    255 ->G
    255 ->B
    
:InitLineImages # -
	<-LINES 0 do	
		"line" I concat ->ILI_Name
		Self <-ILI_Name "NONE" SetImage
	loop
	0 ->LINES
    <-colorID 0 gte if
		0 ->LINES
		"colorID" <-colorID GetCoresWithVar 0 do
			->ILI_Uid
			<-ILI_Uid Self neq if
				CurrentPixelCoords
					<-ILI_Uid CONST_PIXELCOORDY GetUnitAttribute swap sub ->ILI_Y
					<-ILI_Uid CONST_PIXELCOORDX GetUnitAttribute swap sub ->ILI_X
				
				"line" <-LINES concat ->ILI_Name
				Self <-ILI_Name <-ImageLine SetImage
				Self <-ILI_Name <-ILI_X <-ILI_Y 0 0 Distance 24 sub 24.0 div 0.15 SetImageScale
				Self <-ILI_Name <-ILI_Y <-ILI_X atan2 SetImageRotation
				Self <-ILI_Name <-ILI_X 2.0 div <-ILI_Y 2.0 div -11 SetImagePosition
				Self <-ILI_Name 0 0 0 0 SetImageColor #hide for now, color will be set in render
				
				<-LINES 1 add ->LINES
			endif
		loop
	endif
    0 ->LINE_ALPHA

:RenderLineImages # -
    <-LINES 0 do
        "line" I concat ->ILI_Name
        Self <-ILI_Name <-R <-G <-B <-LINE_ALPHA SetImageColor
    loop
:destroyed
	"colorID" <-colorID GetCoresWithVar 0 do
		->lastGate
		<-lastGate "CreepPortal.crpl" "Rerender" 1 SetScriptVar
	loop

:awake
Self CONST_COUNTSFORVICTORY 0 SetUnitAttribute 
Self CONST_NULLIFIERDAMAGES 0 SetUnitAttribute 
Self CONST_SUPPORTSDIGITALIS 0 SetUnitAttribute 
Self CONST_CREATEPZ 0 SetUnitAttribute
Self "DockerInterface.crpl" "HasDockerInterface" GetScriptVar eq0 if
	Self "DockerInterface.crpl" AddScriptToUnit
endif
Self "DockerInterface.crpl" "DockableType" <-Name SetScriptVar
1 OperateWhilePaused

<-colorID -1 eq <-joined 1 eq or if #Ensures that the correct color and image are set for joined stargates.
	Self "main" "Custom" <-trueColor 2 add concat SetImage
else
	Self "main" "Custom" <-colorID 2 add concat SetImage
endif

<-trueColor 5 eq ->isDark
<-isDark not if
	Self "shape" "Custom" <-trueColor 10 add concat SetImage
endif

Self "shape" 0 0 0 0 SetImageColor
Self "shape" -2 SetImagePositionZ
Self "dot" "Custom15" SetImage
Self "dot" -1 SetImagePositionZ
<-Conduction 0 eq if
		Self "dot" 0 0 0 255 SetImageColor
	else
		<-Conduction 1 eq if
			Self "dot" 50 50 255 255 SetImageColor
		else
			Self "dot" 255 255 255 255 SetImageColor
		endif
endif

<-isDark if
    Self "main" "Custom25" SetImage
    Self "dots" "Custom26" SetImage
    Self "dots" 0 0 -1 SetImagePosition
    0 ->Timer0 #to make sure all dark portal animations are always synchronized
else
    Self "dots" "none" SetImage
endif
# self "letter" "Custom" <-Conduction 15 add concat SetImage
# Self "letter" 0 0 0 0 SetImageColor
# Self "letter" -3 SetImagePositionZ
