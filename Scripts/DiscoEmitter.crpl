#This is my custom flip emitter script. It will produce either creeper or anti-creeper depending on which it is submerged under. It has custom popup text to match my other custom emitters and also temporary visible text when "flipping".

#Creeper amount and anticreeper amount are stored in separate variables so you can have it produce different amounts of each.
$Camt:50
$ACamt:-10
#Timers are also stored separately.
$ACinterval:150
$Cinterval:150
$Range:5
#StartState of 1 means the emitter will produce creeper initially. Value of 0 will create AC.
$Name:"DiscoEmitter"
#Thresh is how much creeper/AC must flood the emitter in order for it to flip.
#ImageSlot can be changed if you want to use a different slot.
$ImageSlot:"Custom0"
$Empowerment:1
Once
@awake
#The delay is to match the other emitters.
4 delay
<-ACamt ->tAmount
1 ->Creepin
CurrentCoords ->Y ->X 
endonce
GetTimer0 eq0 <-Creepin and if
	@CProd
	Self "main" 0 256 RandInt 0 256 RandInt 0 256 RandInt 125 256 RandInt SetImageColor
	0 ->Creepin
	1 ->Acreepin
	<-ACinterval SetTimer1
endif
GetTimer1 eq0 <-Acreepin and if
	<-multi if
		<-TotalPower <-ACamt mul ->tAmount
	endif
	@ACProd
	Self "main" 0 256 RandInt 0 256 RandInt 0 256 RandInt 125 256 RandInt SetImageColor
	1 ->Creepin
	0 ->Acreepin
	<-Cinterval SetTimer0
endif
:awake
	Self CONST_COUNTSFORVICTORY 0 SetUnitAttribute Self CONST_NULLIFIERDAMAGES 0 SetUnitAttribute Self CONST_SUPPORTSDIGITALIS 0 SetUnitAttribute
	Self "main" <-ImageSlot SetImage
	Self "main" 0.8 0.8 SetImageScale
	"DISCO" SetPopupText
	Self "EmitterInterface.crpl" "HasEmitterInterface" GetScriptVar eq0 if
		Self "EmitterInterface.crpl" AddScriptToUnit
	endif
	Self "EmitterInterface.crpl" "EmitterType" <-Name SetScriptVar
	Self "EmitterInterface.crpl" "NetName" 0 SetScriptVar

#Creeper production function
:CProd
	<-Y <-Range 1 add add <-Y <-Range sub do
		<-X <-Range 1 add add <-X <-Range sub do
			I J <-Camt <-Empowerment <-NegaPower add 0.1 max mul AddCreeper
		loop
	loop
#AC production function.
:ACProd
	#Only update the tAmount value if multi has been flagged. Otherwise we stick with the base value.
	<-Y <-Range 1 add add <-Y <-Range sub do
		<-X <-Range 1 add add <-X <-Range sub do
			I J <-tAmount AddCreeper
		loop
	loop