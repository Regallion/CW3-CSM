# StargateDisplay.crpl
# Created on: 7/25/2018 5:09:34 PM
# ------------------------------------------

$SafeResize:1

$BgName:"Custom0_256pp"
$FgName:"Custom1_256pp"
$BigName:"Custom2_256"
$ButtonName:"Custom24"

$IsStargateDisplay:1

<-MaxColor eq0 if
	"" SetText
	Self RemoveImages
	return
endif

<-SafeResize IsEditMode and if
    once
        Self RemoveImages
        Self "main" "default" SetImage
        Self "main" 255 255 0 255 SetImageColor
        @awake
    endonce
    
    return
endif

once
    
    CreateList ->maxLevels
	CreateList ->CreeperColors
    <-maxLevels 50 AppendToList
    <-maxLevels 150 AppendToList
    <-maxLevels 300 AppendToList
    <-maxLevels 600 AppendToList
    <-maxLevels 800 AppendToList
    <-maxLevels 1500 AppendToList
    1 ->smIndex
    @awake
    
    0 ->refreshIndex
    5 SetTimer0
	
	0 ->hidden
endonce

#show/hide
<-Changed if
	<-SafeResize not IsEditMode not or if
		Self "main" "none" SetImage
		@SetPosition
		@InitMenu
		@SetText
		<-smIndex @SelectMax
		0 ->Changed
	endif
endif
"H" GetKeyDown if
    "LeftControl" GetKey "RightControl" GetKey or
    "LeftShift" GetKey "RightShift" GetKey or
    and if
        <-hidden not ->hidden
    endif
endif
# handle level change
0 GetMouseButtonDown if
    ScreenWidth 200 IsPaused if 140 add endif sub ->screenX
    ScreenHeight 134 sub ->ScreenY
    GetMouseScreenPixelPosition <-ScreenY sub ->relY <-screenX sub ->relX
    <-relX <-image_width 5.5 add gte <-relX <-image_width 41.5 add lte and if
        <-maxLevels GetListCount 0 do
            <-relY 90 I 25 mul sub sub abs 9 lte if
                I @SelectMax
                <-MaxColor 0 do
                    I @RenderBar
                loop
                break
            endif
        loop
    endif
endif

# re-render
GetTimer0 eq0 if
    <-refreshIndex @RenderBar
    <-refreshIndex 1 add <-MaxColor mod ->refreshIndex
    5 SetTimer0
endif

#call every frame
@SetPosition

:SetSafeText
"This is the stargate display script.
There is a bug with resizing the map with cores in screen mode.
So set the SafeResize param to 0 after you resize the map,
Or just leave it be, it will auto-fix itself once you finalize the map.





" SetText
255 255 0 255 SetTextColor
0.5 SetTextSize

:SetPosition
    1 SetScreenMode
    <-hidden if
        -1000 -1000 SetScreenPixelCoords
    else
        ScreenWidth 200 IsPaused if 140 add endif sub ScreenHeight 158 sub SetScreenPixelCoords
    endif



:InitMenu
150.0 ->image_width #on eigter side
#25.0 ->image_height
20.0 ->image_gap

Self RemoveImages
Self "main" "none" SetImage

Self "big" <-BigName SetImage
Self "big" 255 255 255 128 SetImageColor
Self "big" 10 80 <-image_gap 2 div <-MaxColor 8 sub mul sub -290 SetImagePosition 
Self "big" <-image_width 9.6 div <-image_gap 0.11 <-MaxColor 2 add mul mul neg SetImageScale

<-MaxColor 0 do
    "bg" I concat ->bgName #background
    "fg1" I concat ->fg1Name #foreground1
    "fg2" I concat ->fg2Name #foreground2
    "cr" I concat ->crName #creeper
    "ac" I concat ->acName #AC
    "ic" I concat ->icName #Icon
    
    Self <-bgName <-BgName SetImage
    Self <-bgName 192 192 192 255 SetImageColor
    Self <-bgName 0 I <-image_gap mul neg 140 add -300 SetImagePosition
    Self <-bgName <-image_width 12.0 div <-image_width 24.0 div SetImageScale
    
    Self <-fg1Name <-FgName SetImage
    Self <-fg1Name <-image_width -2.0 div I <-image_gap mul neg 140 add -320 SetImagePosition
    Self <-fg1Name <-image_width 24.0 div <-image_width 24.0 div SetImageScale
    
    Self <-fg2Name <-FgName SetImage
    Self <-fg2Name <-image_width  2.0 div I <-image_gap mul neg 140 add -320 SetImagePosition
    Self <-fg2Name <-image_width 24.0 div <-image_width 24.0 div SetImageScale
    
    Self <-crName <-BgName SetImage
    Self <-crName 0 0 SetImageScale
    
    Self <-acName <-BgName SetImage
    Self <-acName 0 0 SetImageScale
    
    Self <-icName "Custom" I 2 add concat SetImage
    Self <-icName <-image_gap 24.0 div dup SetImageScale
    Self <-icName <-image_width <-image_gap 1.5 div add neg I <-image_gap mul neg 140 add -300 SetImagePosition
loop

<-maxLevels GetListCount 0 do
    "level" I concat ->levelName
    Self <-levelName <-ButtonName SetImage
    Self <-levelName 192 128 64 255 SetImageColor
    Self <-levelName 1.5 dup SetImageScale
    Self <-levelName <-image_width 23.5 add 115 I 25 mul sub -300 SetImagePosition
loop


:RenderBar # i -
    ->rr_id
    <-CreeperColors <-rr_id GetListElement dup 0 max ->rr_rawCreeper 0 min ->rr_rawAC

    <-image_width <-MaxShowCreeper div ->rr_coef
    <-rr_rawCreeper <-rr_coef mul <-image_width min <-image_width neg max ->rr_c
    <-rr_rawAC      <-rr_coef mul <-image_width min <-image_width neg max ->rr_ac

    "cr" <-rr_id concat ->crName #creeper
    "ac" <-rr_id concat ->acName #AC

    #GetCreeperColors Trace3 Trace3
    GetCreeperColors 255 mul ->rr_acB 255 mul ->rr_acG 255 mul ->rr_acR 255 mul ->rr_cB 255 mul ->rr_cG 255 mul ->rr_cR

    Self <-crName <-rr_c 2 div <-rr_id <-image_gap mul neg 140 add  -310 SetImagePosition
    Self <-crName <-rr_c 24.0 div <-image_width 24.0 div SetImageScale
    Self <-crName <-rr_cR <-rr_cG <-rr_cB 255 SetImageColor

    Self <-acName <-rr_ac 2 div <-rr_id <-image_gap mul neg 140 add -310 SetImagePosition
    Self <-acName <-rr_ac 24.0 div <-image_width 24.0 div SetImageScale
    Self <-acName <-rr_acR <-rr_acG <-rr_acB 255 SetImageColor

:SelectMax # index -
    ->smIndex
    <-maxLevels GetListCount 0 do
        "level" I concat ->levelName
        I <-smIndex eq if
            Self <-levelName 0 192 0 255 SetImageColor
        else
            Self <-levelName 192 128 64 255 SetImageColor
        endif
    loop
    <-maxLevels <-smIndex GetListElement ->MaxShowCreeper

:SetText
"MAX" #leave on stack
<-maxLevels GetListCount 0 do
"

" concat
<-maxLevels I GetListElement concat
loop
SetText
255 255 255 255 SetTextColor

0.645 SetTextSize
173 SetTextX
61 SetTextY
-310 SetTextZ

:awake
    
	Self CONST_COUNTSFORVICTORY 0 SetUnitAttribute 
    Self CONST_NULLIFIERDAMAGES 0 SetUnitAttribute
    Self CONST_TAKEMAPSPACE 0 SetUnitAttribute
    Self CONST_SUPPORTSDIGITALIS 0 SetUnitAttribute
	CreateList ->CreeperColors
    1 OperateWhilePaused
	
    <-SafeResize IsEditMode and if
        @SetSafeText
        0 SetScreenMode
    else
	<-MaxColor 0 neq if
			Self "main" "none" SetImage
			@SetPosition
			@InitMenu
			@SetText
			
			<-smIndex @SelectMax
		endif
    endif

    